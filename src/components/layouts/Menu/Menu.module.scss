@use '@/styles/functions' as func;
@use '@/styles/mixins';
@use '@/styles/colors' as c;
@use '@/styles/fonts' as f;
@use '@/styles/variables' as v;

.menu {
  &Check {
    display: none;
    &:checked {
      &~ .menuButton {
        background-color: rgba(255, 255, 255, 0);
        span {
          background-color: inherit;
  
          &::before {
            bottom: 0;
            transform: rotate(45deg);
          }
  
          &::after {
            top: 0;
            transform: rotate(-45deg);
          }
        }
      }

      &~ .menuContent {
        z-index: v.$menuContentsZIndex;
        opacity: 1;

        .menuContentList li a {
          cursor: pointer;
          pointer-events: auto;
        }
      }
    }
  }

  &Button {
    cursor: pointer;
    position: fixed;
    z-index: v.$menuButtonZIndex;
    top: func.toRespPx(24px);
    right: func.toRespPx(24px);
    display: flex;
    height: 60px;
    width: 60px;
    justify-content: center;
    align-items: center;
    background-color: c.$mainColor;
    border-radius: 50%;
    transition: 0.25s;

    span,
    span:before,
    span:after {
      content: '';
      display: block;
      height: 3px;
      width: 25px;
      border-radius: 3px;
      background-color: #ffffff;
      position: absolute;
      transition: inherit;
    }

    span {
      &::before {
        bottom: 8px;
      }
      &::after {
        top: 8px;
      }
    }
  }

  &Content {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    background-color: rgba($color: c.$mainColor, $alpha: 0.9);
    transition: opacity 0.25s, z-index 0.25s;
    opacity: 0;

    &List {
      position: relative;
      margin: func.toRespPx(190px) auto 0;
      width: func.toRespPx(640px);
      text-align: center;

      li {
        list-style: none;
        margin-bottom: func.toRespPx(48px);
        @include f.tsukushiARoundGothicR(32px);

        a {
          cursor: default;
          user-select: none;
          pointer-events: none;
          display: inline-block;
          font-size: 15px;
          box-sizing: border-box;
          color: white;
          text-decoration: none;
          position: relative;
          font-size: inherit;

          &::after {
            position: absolute;
            left: 0;
            content: '';
            width: 100%;
            height: func.toRespPx(1.75px);
            background: white;
            bottom: -4px;
            opacity: 0;
            visibility: hidden;
            transition: 0.3s;
          }
            
          &:hover::after {
            visibility: visible;
            bottom: 1px;
            opacity: 1;
          }
        }
      }

      hr {
        margin-bottom: func.toRespPx(48px);
      }

      &Sns {
        @include f.defaultW4(24px);
        text-align: center;
  
        > p {
          margin-bottom: func.toRespPx(10px);
          color: white;
        }
  
        &List {
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 0 func.toRespPx(32px);
          list-style: none;

          li {
            a {
              transition: opacity .2s cubic-bezier(0.45, 0, 0.55, 1);
            }
            a:hover {
              opacity: 0.75;
              &::after {
                display: none !important;
              }
            }
          }
        }
  
        // Facebook
        &Fb {
          display: inline-block;
          @include mixins.toRespSize(57.29px, 58.06px);
  
          > img {
            width: inherit;
          }
        }
  
        &Insta {
          display: inline-block;
          @include mixins.toRespSize(53.33px, 54.19px);
  
          > img {
            width: inherit;
          }
        }
      }
    }

    &Sns {
      margin-bottom: func.toRespPx(24px) !important;
    }

    &.isPc {
      .menuContentList {
        top: 50%;
        transform: translateY(-50%);
        margin: 0 auto;

        li {
          list-style: none;
          margin-bottom: func.toRespPx(calc(48px * 0.762));
          @include f.tsukushiARoundGothicR(calc(32px * 0.762));
        }

        hr {
          margin-bottom: func.toRespPx(calc(48px * 0.762));
        }
      }
    }
  }
}
